package translation

import (
	"fmt"
	"log"

	"github.com/bwmarrin/discordgo"
)

var flagToLang = map[string]string{
	"ğŸ‡ºğŸ‡¸": "en",
	"ğŸ‡©ğŸ‡ª": "de",
	"ğŸ‡«ğŸ‡·": "fr",
	"ğŸ‡ªğŸ‡¸": "es",
	"ğŸ‡®ğŸ‡¹": "it",
	"ğŸ‡µğŸ‡¹": "pt",
	"ğŸ‡·ğŸ‡º": "ru",
	"ğŸ‡¦ğŸ‡±": "sq",
	"ğŸ‡¸ğŸ‡¦": "ar",
	"ğŸ‡§ğŸ‡¦": "bs",
	"ğŸ‡§ğŸ‡¬": "bg",
	"ğŸ‡¨ğŸ‡³": "zh-CN",
	"ğŸ‡­ğŸ‡·": "hr",
	"ğŸ‡¨ğŸ‡¿": "cs",
	"ğŸ‡©ğŸ‡°": "da",
	"ğŸ‡ªğŸ‡ª": "et",
	"ğŸ‡«ğŸ‡®": "fi",
	"ğŸ‡¬ğŸ‡·": "el",
	"ğŸ‡­ğŸ‡º": "hu",
	"ğŸ‡®ğŸ‡©": "id",
	"ğŸ‡®ğŸ‡³": "hi",
	"ğŸ‡®ğŸ‡ª": "ga",
	"ğŸ‡®ğŸ‡¸": "is",
	"ğŸ‡®ğŸ‡±": "he",
	"ğŸ‡¯ğŸ‡µ": "ja",
	"ğŸ‡°ğŸ‡·": "ko",
	"ğŸ‡±ğŸ‡»": "lv",
	"ğŸ‡±ğŸ‡¹": "lt",
	"ğŸ‡²ğŸ‡¹": "mt",
	"ğŸ‡²ğŸ‡ª": "sr",
	"ğŸ‡³ğŸ‡±": "nl",
	"ğŸ‡³ğŸ‡´": "no",
	"ğŸ‡µğŸ‡°": "ur",
	"ğŸ‡µğŸ‡±": "pl",
	"ğŸ‡·ğŸ‡´": "ro",
	"ğŸ‡·ğŸ‡¸": "sr",
	"ğŸ‡¸ğŸ‡°": "sk",
	"ğŸ‡¸ğŸ‡®": "sl",
	"ğŸ‡¸ğŸ‡¬": "sv",
	"ğŸ‡¹ğŸ‡­": "th",
	"ğŸ‡¹ğŸ‡·": "tr",
	"ğŸ‡¹ğŸ‡¼": "zh-TW",
	"ğŸ‡ºğŸ‡¦": "uk",
	"ğŸ‡»ğŸ‡¦": "la",
}

func ReactionAdd(sess *discordgo.Session, reaction *discordgo.MessageReactionAdd) {

	//Because call for API is expensive, it is better to run it in a  different goroutine
	go func() {
		// Check if the reaction is a flag emoji and get the corresponding language code
		targetLang, ok := flagToLang[reaction.Emoji.Name]
		if !ok {
			// If the emoji is not a flag we're interested in, ignore the reaction
			return
		}

		// Retrieve the original message
		msg, err := sess.ChannelMessage(reaction.ChannelID, reaction.MessageID)
		if err != nil {
			log.Printf("Error retrieving message: %v", err)
			sess.ChannelMessageSend(reaction.ChannelID, "Error: Unable to retrieve the message.")
			return
		}

		// Translate the message
		translatedText, err := translateText(msg.Content, targetLang)
		if err != nil {
			log.Printf("Error translating text: %v", err)
			sess.ChannelMessageSend(reaction.ChannelID, "Error: Unable to translate the message.")
			return
		}

		langName, ok := languageFullName[targetLang]
		if !ok {
			langName = targetLang // Fallback to language code
		}
		userMention := fmt.Sprintf("<@%s>", reaction.UserID)
		// Create a new embed message
		embed := &discordgo.MessageEmbed{
			Title:       "Translation",
			Description: fmt.Sprintf("Requested by %s", userMention),
			Fields: []*discordgo.MessageEmbedField{
				{
					Name:   "Original Text",
					Value:  msg.Content,
					Inline: false,
				},
				{
					Name:   fmt.Sprintf("Translated to %s", langName),
					Value:  translatedText,
					Inline: false,
				},
			},
			Color: 0x00ff00, // Set the color of the embed
		}

		// Send the embedded message
		sess.ChannelMessageSendEmbed(reaction.ChannelID, embed)
	}()
}

// It is created to write language names beautifully
var languageFullName = map[string]string{
	"en":    "English",
	"de":    "German",
	"fr":    "French",
	"es":    "Spanish",
	"it":    "Italian",
	"pt":    "Portuguese",
	"ru":    "Russian",
	"sq":    "Albanian",
	"ar":    "Arabic",
	"bs":    "Bosnian",
	"bg":    "Bulgarian",
	"zh-CN": "Chinese (Simplified)",
	"hr":    "Croatian",
	"cs":    "Czech",
	"da":    "Danish",
	"et":    "Estonian",
	"fi":    "Finnish",
	"el":    "Greek",
	"hu":    "Hungarian",
	"id":    "Indonesian",
	"hi":    "Hindi",
	"ga":    "Irish",
	"is":    "Icelandic",
	"he":    "Hebrew",
	"ja":    "Japanese",
	"ko":    "Korean",
	"lv":    "Latvian",
	"lt":    "Lithuanian",
	"mt":    "Maltese",
	"sr":    "Serbian",
	"nl":    "Dutch",
	"no":    "Norwegian",
	"ur":    "Urdu",
	"pl":    "Polish",
	"ro":    "Romanian",
	"sk":    "Slovak",
	"sl":    "Slovenian",
	"sv":    "Swedish",
	"th":    "Thai",
	"tr":    "Turkish",
	"zh-TW": "Chinese (Traditional)",
	"uk":    "Ukrainian",
	"la":    "Latin",
}
